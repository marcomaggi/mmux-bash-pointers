# @configure_input@
#

AC_PREREQ([2.72])
MMUX_PKG_VERSIONS([0],[1],[0],[devel.1])
AC_INIT([MMUX Bash Pointers],[MMUX_PACKAGE_VERSION],
  [mrc.mgg@gmail.com],
  [mmux-bash-pointers],[https://github.com/marcomaggi/mmux-bash-pointers])
MMUX_INIT
MMUX_LIBTOOL_LIBRARY_VERSIONS([mmux_bash_pointers],0,0,0)
AC_REVISION([0.1])
AC_COPYRIGHT([Copyright (c) 2024 Marco Maggi <mrc.mgg@gmail.com>

This program is free software: you  can redistribute it and/or modify it
under  the  terms of  the GNU  General Public  License as  published  by
the Free  Software Foundation, either version  3 of the License,  or (at
your option) any later version.

This program  is distributed  in the  hope that it  will be  useful, but
WITHOUT   ANY   WARRANTY;  without   even   the   implied  warranty   of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser
General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
])

AC_CONFIG_SRCDIR([src/])
AC_CONFIG_MACRO_DIR([meta/autotools])
AC_CONFIG_AUX_DIR([meta/autotools])
AC_USE_SYSTEM_EXTENSIONS
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AM_INIT_AUTOMAKE([1.17 foreign subdir-objects])
AM_MAINTAINER_MODE

AM_PROG_AR
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_MKDIR_P

LT_PREREQ([2.4.7])
LT_INIT([disable-static])


#### basic system inspection

MMUX_CHECK_TARGET_OS
AX_IS_RELEASE([git-directory])

AC_LANG([C])
MMUX_LANG_C11

AM_PROG_AS
AM_PROG_CC_C_O
AC_PATH_PROG([M4_PROGRAM],[m4])
AC_PATH_PROG([BASH_PROGRAM],[/bin/bash],[/bin/bash],[:])

AC_CACHE_SAVE


#### external libraries

PKG_PREREQ([0.29])
PKG_INSTALLDIR
MMUX_CHECK_PKG_CONFIG_MACROS
PKG_CHECK_MODULES([BASH],[bash],,[AC_MSG_WARN([package GNU Bash not found])])

AC_CHECK_HEADERS([libgen.h])

AC_SEARCH_LIBS(cos, m,, [AC_MSG_ERROR([Cannot find libm])])
MBFL_SETUP_FOR_TESTING([v3.0.0])

AC_CACHE_SAVE


#### inspect GNU Bash header files

m4_define([MMUX_BASH_INCLUDE_FILES],[
#ifdef HAVE_BASHTYPES_H
#  include <bashtypes.h>
#endif

#ifdef HAVE_BASHJMP_H
#  include <bashjmp.h>
#endif

#ifdef HAVE_BUILTINS_H
#  include <builtins.h>
#endif

#ifdef HAVE_SHELL_H
#  include <shell.h>
#endif

#ifdef HAVE_COMMON_H
#  include <common.h>
#endif
])

AC_DEFUN([MMUX_BASH_CONSTANT_TEST],[MMUX_CC_DETERMINE_VALUEOF([$1],[$1],[MMUX_BASH_INCLUDE_FILES])])
AC_DEFUN([MMUX_BASH_CONSTANT_TESTS],[m4_map_args_w($1,[MMUX_BASH_CONSTANT_TEST(],[)])])

MMUX_AUTOCONF_SAVE_SHELL_VARIABLE_WHILE_APPENDING([CFLAGS],[" $BASH_CFLAGS"],
  [MMUX_AUTOCONF_SAVE_SHELL_VARIABLE_WHILE_APPENDING([LIBS],[" $BASH_LIBS"],
     [AC_CHECK_HEADERS([bashtypes.h bashjmp.h builtins.h shell.h common.h],,
        [AC_MSG_ERROR([unable to find all the GNU Bash header files])],
        [MMUX_BASH_INCLUDE_FILES])
      MMUX_BASH_CONSTANT_TESTS([BUILTIN_ENABLED EXECUTION_SUCCESS EXECUTION_FAILURE EX_USAGE])])])

AC_CACHE_SAVE


#### check for C language types

dnl MMUX_CC_CHECK_STANDARD_TYPES
dnl MMUX_CC_CHECK_STANDARD_TYPE_EXTENSION_FLOAT
dnl MMUX_CC_CHECK_STANDARD_TYPE_EXTENSION_DECIMAL_FLOAT

dnl MMUX_CC_INSPECT_STANDARD_TYPES
dnl MMUX_CC_INSPECT_STANDARD_FEATURE_TYPES


#### inspecting functions

# These are not checked in the "mmux.m4" file, even though the common includes have them.
AC_CHECK_HEADERS([grp.h pwd.h utime.h sys/uio.h sys/socket.h sys/un.h netinet/in.h net/if.h arpa/inet.h netdb.h])

AC_CHECK_FUNCS([mempcpy strnlen strndup stpncpy strcasecmp strncasecmp strverscmp
                rawmemchr memmem strchrnul basename dirname canonicalize_file_name
                renameat2 group_member dup3 accept4 copy_file_range gettid])


#### inspecting errno constants

AC_DEFUN([MMUX_ERRNO_TEST],[MMUX_CC_DETERMINE_VALUEOF([$1],[$1],[MMUX_CC_COMMON_INCLUDES_FOR_TESTS])])
AC_DEFUN([MMUX_ERRNO_TESTS],[m4_map_args_w($1,[MMUX_ERRNO_TEST(],[)])])

MMUX_ERRNO_TESTS([EPERM ENOENT ESRCH EINTR EIO ENXIO E2BIG ENOEXEC EBADF ECHILD EAGAIN ENOMEM
                  EACCES EFAULT ENOTBLK EBUSY EEXIST EXDEV ENODEV ENOTDIR EISDIR EINVAL ENFILE
                  EMFILE ENOTTY ETXTBSY EFBIG ENOSPC ESPIPE EROFS EMLINK EPIPE EDOM ERANGE EDEADLK
                  ENAMETOOLONG ENOLCK ENOSYS ENOTEMPTY ELOOP EWOULDBLOCK ENOMSG EIDRM ECHRNG
                  EL2NSYNC EL3HLT EL3RST ELNRNG EUNATCH ENOCSI EL2HLT EBADE EBADR EXFULL ENOANO
                  EBADRQC EBADSLT EDEADLOCK EBFONT ENOSTR ENODATA ETIME ENOSR ENONET ENOPKG EREMOTE
                  ENOLINK EADV ESRMNT ECOMM EPROTO EMULTIHOP EDOTDOT EBADMSG EOVERFLOW ENOTUNIQ EBADFD
                  EREMCHG ELIBACC ELIBBAD ELIBSCN ELIBMAX ELIBEXEC EILSEQ ERESTART ESTRPIPE EUSERS ENOTSOCK
                  EDESTADDRREQ EMSGSIZE EPROTOTYPE ENOPROTOOPT EPROTONOSUPPORT ESOCKTNOSUPPORT EOPNOTSUPP
                  EPFNOSUPPORT EAFNOSUPPORT EADDRINUSE EADDRNOTAVAIL ENETDOWN ENETUNREACH ENETRESET
                  ECONNABORTED ECONNRESET ENOBUFS EISCONN ENOTCONN ESHUTDOWN ETOOMANYREFS ETIMEDOUT
                  ECONNREFUSED EHOSTDOWN EHOSTUNREACH EALREADY EINPROGRESS ESTALE EUCLEAN ENOTNAM
                  ENAVAIL EISNAM EREMOTEIO EDQUOT ENOMEDIUM EMEDIUMTYPE ECANCELED ENOKEY
                  EKEYEXPIRED EKEYREVOKED EKEYREJECTED EOWNERDEAD ENOTRECOVERABLE])

AC_CACHE_SAVE


#### inspecting constants

AC_DEFUN([MMUX_CONSTANT_TEST],[MMUX_CC_DETERMINE_VALUEOF([$1],[$1],[MMUX_CC_COMMON_INCLUDES_FOR_TESTS])])
AC_DEFUN([MMUX_CONSTANT_TESTS],[m4_map_args_w($1,[MMUX_CONSTANT_TEST(],[)])])

## seek whence arguments
MMUX_CONSTANT_TESTS([SEEK_SET SEEK_CUR SEEK_END SEEK_DATA SEEK_HOLE])
AC_CACHE_SAVE

## file descriptor related flags
MMUX_CONSTANT_TESTS([O_ACCMODE O_APPEND O_ASYNC O_CREAT O_EXCL
     O_EXEC O_EXLOCK O_FSYNC O_IGNORE_CTTY O_NDELAY O_NOCTTY O_NOLINK
     O_NONBLOCK O_NOTRANS O_RDONLY O_RDWR O_READ O_SHLOCK O_SYNC
     O_TRUNC O_WRITE O_WRONLY])
MMUX_CONSTANT_TESTS([O_DSYNC O_PATH O_TMPFILE])
## this is GNU specific
MMUX_CONSTANT_TEST([O_NOATIME])
## these are Linux specific
MMUX_CONSTANT_TESTS([O_CLOEXEC O_DIRECT O_DIRECTORY O_LARGEFILE O_NOFOLLOW])
MMUX_CONSTANT_TESTS([RWF_APPEND RWF_DSYNC RWF_HIPRI RWF_NOWAIT RWF_SYNC])

AC_CACHE_SAVE

## ioctl action selection
MMUX_CONSTANT_TESTS([F_DUPFD F_GETFD F_GETFL F_GETLK
     F_GETOWN F_SETFD F_SETFL F_SETLKW F_SETLK F_SETOWN
     F_RDLCK F_UNLCK F_WRLCK
     FD_CLOEXEC])
AC_CACHE_SAVE

## miscellaneous file-related constants
MMUX_CONSTANT_TESTS([R_OK W_OK X_OK F_OK])
AC_CACHE_SAVE

## mode bits
MMUX_CONSTANT_TESTS([S_IRUSR S_IWUSR S_IXUSR S_IRGRP S_IWGRP
     S_IXGRP S_IROTH S_IWOTH S_IXOTH S_IRWXU S_IRWXG S_IRWXO
     S_ISUID S_ISGID S_ISVTX])
AC_CACHE_SAVE

## ioctl stuff
MMUX_CONSTANT_TESTS([SIOCATMARK])

## file system stuff
MMUX_CONSTANT_TESTS([AT_FDCWD AT_EACCESS AT_SYMLINK_FOLLOW AT_SYMLINK_NOFOLLOW AT_EMPTY_PATH AT_REMOVEDIR AT_NOAUTOMOUNT MAXSYMLINKS])
MMUX_CONSTANT_TESTS([RENAME_EXCHANGE RENAME_NOREPLACE RENAME_WITHEOUT])

## networking
MMUX_CONSTANT_TESTS([SOCK_CLOEXEC SOCK_DCCP SOCK_DGRAM SOCK_NONBLOCK SOCK_PACKET SOCK_RAW SOCK_RDM SOCK_SEQPACKET SOCK_STREAM])
MMUX_CONSTANT_TESTS([AF_ALG AF_APPLETALK AF_AX25 AF_BLUETOOTH AF_CAN AF_DECnet AF_FILE AF_IB AF_INET])
MMUX_CONSTANT_TESTS([AF_INET6 AF_IPX AF_KCM AF_KEY AF_LLC AF_LOCAL AF_MPLS AF_NETLINK AF_PACKET AF_PPPOX])
MMUX_CONSTANT_TESTS([AF_RDS AF_TIPC AF_UNIX AF_UNSPEC AF_VSOCK AF_X25 AF_XDP])
MMUX_CONSTANT_TESTS([PF_LOCAL PF_UNIX PF_FILE PF_INET PF_INET6 PF_UNSPEC])
MMUX_CONSTANT_TESTS([SHUT_RD SHUT_WR SHUT_RDWR])
MMUX_CONSTANT_TESTS([MSG_OOB MSG_PEEK MSG_DONTROUTE MSG_CONFIRM MSG_DONTWAIT MSG_EOR MSG_MORE MSG_NOSIGNAL])
MMUX_CONSTANT_TESTS([IFNAMSIZ])
MMUX_CONSTANT_TESTS([SOL_SOCKET SO_BROADCAST SO_DEBUG SO_DONTROUTE SO_ERROR SO_KEEPALIVE SO_LINGER])
MMUX_CONSTANT_TESTS([SO_OOBINLINE SO_RCVBUF SO_REUSEADDR SO_SNDBUF SO_STYLE SO_TYPE])
MMUX_CONSTANT_TESTS([INADDR_ANY INADDR_BROADCAST INADDR_LOOPBACK INADDR_NONE])
MMUX_CONSTANT_TESTS([AI_ADDRCONFIG AI_ALL AI_CANONIDN  AI_CANONNAME AI_IDN])
MMUX_CONSTANT_TESTS([AI_NUMERICSERV AI_PASSIVE AI_V4MAPPED])

MMUX_CONSTANT_TESTS([NI_DGRAM NI_IDN NI_NAMEREQD NI_NOFQDN NI_NUMERICHOST NI_NUMERICSERV])

MMUX_CONSTANT_TESTS([IPPROTO_AH IPPROTO_BEETPH IPPROTO_COMP IPPROTO_DCCP IPPROTO_EGP IPPROTO_ENCAP])
MMUX_CONSTANT_TESTS([IPPROTO_ESP IPPROTO_ETHERNET IPPROTO_GRE IPPROTO_ICMP IPPROTO_IDP IPPROTO_IGMP])
MMUX_CONSTANT_TESTS([IPPROTO_IP IPPROTO_IPIP IPPROTO_IPV6 IPPROTO_MPLS IPPROTO_MPTCP IPPROTO_MTP])
MMUX_CONSTANT_TESTS([IPPROTO_PIM IPPROTO_PUP IPPROTO_RAW IPPROTO_RSVP IPPROTO_SCTP IPPROTO_TCP])
MMUX_CONSTANT_TESTS([IPPROTO_TP IPPROTO_UDP IPPROTO_UDPLITE])

## miscellaneous
MMUX_CONSTANT_TESTS([EOF])
AC_CACHE_SAVE


#### external packages

AC_ARG_WITH([emacs],
  AS_HELP_STRING([--with-emacs],[enable installation of GNU Emacs module]),
  [true],[with_emacs=no])
AC_MSG_CHECKING([whether GNU Emacs module will be installed])
AS_VAR_IF(with_emacs,'yes',
  [AC_MSG_RESULT([yes])],
  [AC_MSG_RESULT([no])])
AM_CONDITIONAL([WANT_EMACS],[test x$with_emacs = xyes])
AS_VAR_IF(with_emacs,'yes',
  [AM_PATH_LISPDIR])


#### finish

AC_CONFIG_HEADERS([config.h])
AC_CONFIG_FILES([Makefile]
  [src/mmux-bash-pointers-config.h]
  [src/m4/mmux-bash-pointers-config.m4]
  [doc/mmux-version.texi]
  [meta/scripts/mmux-bash-pointers.pc]
  [meta/slackware/slack-desc])
MMUX_OUTPUT
AC_CONFIG_SUBDIRS([mmux-cc-types])
AC_OUTPUT

### end of file
