/*
  Part of: MMUX Bash Pointers
  Contents: public header file
  Date: Sep  9, 2024

  Abstract

	This is the public  header file of the library, defining  the public API.  It
	must be included in all the code that uses the library.

  Copyright (C) 2024 Marco Maggi <mrc.mgg@gmail.com>

  This program is free  software: you can redistribute it and/or  modify it under the
  terms of the  GNU Lesser General Public  License as published by  the Free Software
  Foundation, either version 3 of the License, or (at your option) any later version.

  This program  is distributed in the  hope that it  will be useful, but  WITHOUT ANY
  WARRANTY; without  even the implied  warranty of  MERCHANTABILITY or FITNESS  FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License along with
  this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef MMUX_BASH_POINTERS_H
#define MMUX_BASH_POINTERS_H 1


/** --------------------------------------------------------------------
 ** Preliminary definitions.
 ** ----------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* The  macro  MMUX_BASH_POINTERS_UNUSED  indicates   that  a  function,  function
   argument or variable may potentially be unused. Usage examples:

   static int unused_function (char arg) MMUX_BASH_POINTERS_UNUSED;
   int foo (char unused_argument MMUX_BASH_POINTERS_UNUSED);
   int unused_variable MMUX_BASH_POINTERS_UNUSED;
*/
#ifdef __GNUC__
#  define MMUX_BASH_POINTERS_UNUSED		__attribute__((__unused__))
#else
#  define MMUX_BASH_POINTERS_UNUSED		/* empty */
#endif

#ifndef __GNUC__
#  define __attribute__(...)	/* empty */
#endif

#ifndef __GNUC__
#  define __builtin_expect(...)	/* empty */
#endif

#if defined _WIN32 || defined __CYGWIN__
#  ifdef BUILDING_DLL
#    ifdef __GNUC__
#      define mmux_bash_pointers_decl		__attribute__((__dllexport__)) extern
#    else
#      define mmux_bash_pointers_decl		__declspec(dllexport) extern
#    endif
#  else
#    ifdef __GNUC__
#      define mmux_bash_pointers_decl		__attribute__((__dllimport__)) extern
#    else
#      define mmux_bash_pointers_decl		__declspec(dllimport) extern
#    endif
#  endif
#  define mmux_bash_pointers_private_decl	extern
#else
#  if __GNUC__ >= 4
#    define mmux_bash_pointers_decl		__attribute__((__visibility__("default"))) extern
#    define mmux_bash_pointers_private_decl	__attribute__((__visibility__("hidden")))  extern
#  else
#    define mmux_bash_pointers_decl		extern
#    define mmux_bash_pointers_private_decl	extern
#  endif
#endif


/** --------------------------------------------------------------------
 ** Headers.
 ** ----------------------------------------------------------------- */

#include <stddef.h>
#include <unistd.h>		/* for the type: ssize_t, pid_t */
#include <stdint.h>
#include <inttypes.h>
#include <sys/types.h>		/* for the type: mode_t, uid_t, gid_t */
#include <complex.h>


/** --------------------------------------------------------------------
 ** Constants and preprocessor macros: type sizes measured in bytes.
 ** ----------------------------------------------------------------- */

/*
#undef  MMUX_LIBC_SIZEOF_POINTER
#define MMUX_LIBC_SIZEOF_POINTER		@MMUX_LIBC_SIZEOF_POINTER@
#undef  MMUX_LIBC_SIZEOF_SCHAR
#define MMUX_LIBC_SIZEOF_SCHAR			@MMUX_LIBC_SIZEOF_SCHAR@
#undef  MMUX_LIBC_SIZEOF_UCHAR
#define MMUX_LIBC_SIZEOF_UCHAR			@MMUX_LIBC_SIZEOF_UCHAR@
#undef  MMUX_LIBC_SIZEOF_SSHORT
#define MMUX_LIBC_SIZEOF_SSHORT			@MMUX_LIBC_SIZEOF_SSHORT@
#undef  MMUX_LIBC_SIZEOF_USHORT
#define MMUX_LIBC_SIZEOF_USHORT			@MMUX_LIBC_SIZEOF_USHORT@
#undef  MMUX_LIBC_SIZEOF_SINT
#define MMUX_LIBC_SIZEOF_SINT			@MMUX_LIBC_SIZEOF_SINT@
#undef  MMUX_LIBC_SIZEOF_UINT
#define MMUX_LIBC_SIZEOF_UINT			@MMUX_LIBC_SIZEOF_UINT@
#undef  MMUX_LIBC_SIZEOF_SLONG
#define MMUX_LIBC_SIZEOF_SLONG			@MMUX_LIBC_SIZEOF_SLONG@
#undef  MMUX_LIBC_SIZEOF_ULONG
#define MMUX_LIBC_SIZEOF_ULONG			@MMUX_LIBC_SIZEOF_ULONG@

#if ((defined HAVE_LONG_LONG_INT) && (1 == HAVE_LONG_LONG_INT))
#undef  MMUX_LIBC_SIZEOF_SLLONG
#define MMUX_LIBC_SIZEOF_SLLONG			@MMUX_LIBC_SIZEOF_SLLONG@
#endif
#if ((defined HAVE_UNSIGNED_LONG_LONG_INT) && (1 == HAVE_UNSIGNED_LONG_LONG_INT))
#undef  MMUX_LIBC_SIZEOF_ULLONG
#define MMUX_LIBC_SIZEOF_ULLONG			@MMUX_LIBC_SIZEOF_ULLONG@
#endif

#undef  MMUX_LIBC_SIZEOF_SINT8
#define MMUX_LIBC_SIZEOF_SINT8			@MMUX_LIBC_SIZEOF_SINT8@
#undef  MMUX_LIBC_SIZEOF_UINT8
#define MMUX_LIBC_SIZEOF_UINT8			@MMUX_LIBC_SIZEOF_UINT8@
#undef  MMUX_LIBC_SIZEOF_SINT16
#define MMUX_LIBC_SIZEOF_SINT16			@MMUX_LIBC_SIZEOF_SINT16@
#undef  MMUX_LIBC_SIZEOF_UINT16
#define MMUX_LIBC_SIZEOF_UINT16			@MMUX_LIBC_SIZEOF_UINT16@
#undef  MMUX_LIBC_SIZEOF_SINT32
#define MMUX_LIBC_SIZEOF_SINT32			@MMUX_LIBC_SIZEOF_SINT32@
#undef  MMUX_LIBC_SIZEOF_UINT32
#define MMUX_LIBC_SIZEOF_UINT32			@MMUX_LIBC_SIZEOF_UINT32@
#undef  MMUX_LIBC_SIZEOF_SINT64
#define MMUX_LIBC_SIZEOF_SINT64			@MMUX_LIBC_SIZEOF_SINT64@
#undef  MMUX_LIBC_SIZEOF_UINT64
#define MMUX_LIBC_SIZEOF_UINT64			@MMUX_LIBC_SIZEOF_UINT64@

#undef  MMUX_LIBC_SIZEOF_FLOAT
#define MMUX_LIBC_SIZEOF_FLOAT			@MMUX_LIBC_SIZEOF_FLOAT@
#undef  MMUX_LIBC_SIZEOF_DOUBLE
#define MMUX_LIBC_SIZEOF_DOUBLE			@MMUX_LIBC_SIZEOF_DOUBLE@
#if ((defined HAVE_LONG_DOUBLE) && (1 == HAVE_LONG_DOUBLE))
#undef  MMUX_LIBC_SIZEOF_LDOUBLE
#define MMUX_LIBC_SIZEOF_LDOUBLE		@MMUX_LIBC_SIZEOF_LDOUBLE@
#endif
#undef  MMUX_LIBC_SIZEOF_COMPLEX
#define MMUX_LIBC_SIZEOF_COMPLEX		@MMUX_LIBC_SIZEOF_COMPLEX@

#undef  MMUX_LIBC_SIZEOF_SSIZE
#define MMUX_LIBC_SIZEOF_SSIZE			@MMUX_LIBC_SIZEOF_SSIZE@
#undef  MMUX_LIBC_SIZEOF_USIZE
#define MMUX_LIBC_SIZEOF_USIZE			@MMUX_LIBC_SIZEOF_USIZE@
#undef  MMUX_LIBC_SIZEOF_SINTMAX
#define MMUX_LIBC_SIZEOF_SINTMAX		@MMUX_LIBC_SIZEOF_SINTMAX@
#undef  MMUX_LIBC_SIZEOF_UINTMAX
#define MMUX_LIBC_SIZEOF_UINTMAX		@MMUX_LIBC_SIZEOF_UINTMAX@
#undef  MMUX_LIBC_SIZEOF_SINTPTR
#define MMUX_LIBC_SIZEOF_SINTPTR		@MMUX_LIBC_SIZEOF_SINTPTR@
#undef  MMUX_LIBC_SIZEOF_UINTPTR
#define MMUX_LIBC_SIZEOF_UINTPTR		@MMUX_LIBC_SIZEOF_UINTPTR@

#undef  MMUX_LIBC_SIZEOF_PTRDIFF
#define MMUX_LIBC_SIZEOF_PTRDIFF		@MMUX_LIBC_SIZEOF_PTRDIFF@
#undef  MMUX_LIBC_SIZEOF_MODE
#define MMUX_LIBC_SIZEOF_MODE			@MMUX_LIBC_SIZEOF_MODE@
#undef  MMUX_LIBC_SIZEOF_OFF
#define MMUX_LIBC_SIZEOF_OFF			@MMUX_LIBC_SIZEOF_OFF@
#undef  MMUX_LIBC_SIZEOF_PID
#define MMUX_LIBC_SIZEOF_PID			@MMUX_LIBC_SIZEOF_PID@
#undef  MMUX_LIBC_SIZEOF_UID
#define MMUX_LIBC_SIZEOF_UID			@MMUX_LIBC_SIZEOF_UID@
#undef  MMUX_LIBC_SIZEOF_GID
#define MMUX_LIBC_SIZEOF_GID			@MMUX_LIBC_SIZEOF_GID@
#undef  MMUX_LIBC_SIZEOF_WCHAR
#define MMUX_LIBC_SIZEOF_WCHAR			@MMUX_LIBC_SIZEOF_WCHAR@
#undef  MMUX_LIBC_SIZEOF_WINT
#define MMUX_LIBC_SIZEOF_WINT			@MMUX_LIBC_SIZEOF_WINT@
*/


/** --------------------------------------------------------------------
 ** Constants and preprocessor macros: type maximum values.
 ** ----------------------------------------------------------------- */

/*
#undef  MMUX_BASH_TYPE_MAX_POINTER
#define MMUX_BASH_TYPE_MAX_POINTER			@MMUX_BASH_TYPE_MAX_UINTPTR@
#undef  MMUX_BASH_TYPE_MAX_SCHAR
#define MMUX_BASH_TYPE_MAX_SCHAR			@MMUX_BASH_TYPE_MAX_SCHAR@
#undef  MMUX_BASH_TYPE_MAX_UCHAR
#define MMUX_BASH_TYPE_MAX_UCHAR			@MMUX_BASH_TYPE_MAX_UCHAR@
#undef  MMUX_BASH_TYPE_MAX_SSHORT
#define MMUX_BASH_TYPE_MAX_SSHORT			@MMUX_BASH_TYPE_MAX_SSHORT@
#undef  MMUX_BASH_TYPE_MAX_USHORT
#define MMUX_BASH_TYPE_MAX_USHORT			@MMUX_BASH_TYPE_MAX_USHORT@
#undef  MMUX_BASH_TYPE_MAX_SINT
#define MMUX_BASH_TYPE_MAX_SINT			@MMUX_BASH_TYPE_MAX_SINT@
#undef  MMUX_BASH_TYPE_MAX_UINT
#define MMUX_BASH_TYPE_MAX_UINT			@MMUX_BASH_TYPE_MAX_UINT@
#undef  MMUX_BASH_TYPE_MAX_SLONG
#define MMUX_BASH_TYPE_MAX_SLONG			@MMUX_BASH_TYPE_MAX_SLONG@
#undef  MMUX_BASH_TYPE_MAX_ULONG
#define MMUX_BASH_TYPE_MAX_ULONG			@MMUX_BASH_TYPE_MAX_ULONG@

#if ((defined HAVE_LONG_LONG_INT) && (1 == HAVE_LONG_LONG_INT))
#undef  MMUX_BASH_TYPE_MAX_SLLONG
#define MMUX_BASH_TYPE_MAX_SLLONG			@MMUX_BASH_TYPE_MAX_SLLONG@
#endif
#if ((defined HAVE_UNSIGNED_LONG_LONG_INT) && (1 == HAVE_UNSIGNED_LONG_LONG_INT))
#undef  MMUX_BASH_TYPE_MAX_ULLONG
#define MMUX_BASH_TYPE_MAX_ULLONG			@MMUX_BASH_TYPE_MAX_ULLONG@
#endif

#undef  MMUX_BASH_TYPE_MAX_SSIZE
#define MMUX_BASH_TYPE_MAX_SSIZE			@MMUX_BASH_TYPE_MAX_SSIZE@
#undef  MMUX_BASH_TYPE_MAX_USIZE
#define MMUX_BASH_TYPE_MAX_USIZE			@MMUX_BASH_TYPE_MAX_USIZE@
#undef  MMUX_BASH_TYPE_MAX_SINTMAX
#define MMUX_BASH_TYPE_MAX_SINTMAX			@MMUX_BASH_TYPE_MAX_SINTMAX@
#undef  MMUX_BASH_TYPE_MAX_UINTMAX
#define MMUX_BASH_TYPE_MAX_UINTMAX			@MMUX_BASH_TYPE_MAX_UINTMAX@
#undef  MMUX_BASH_TYPE_MAX_SINTPTR
#define MMUX_BASH_TYPE_MAX_SINTPTR			@MMUX_BASH_TYPE_MAX_SINTPTR@
#undef  MMUX_BASH_TYPE_MAX_UINTPTR
#define MMUX_BASH_TYPE_MAX_UINTPTR			@MMUX_BASH_TYPE_MAX_UINTPTR@

#undef  MMUX_BASH_TYPE_MAX_PTRDIFF
#define MMUX_BASH_TYPE_MAX_PTRDIFF			@MMUX_BASH_TYPE_MAX_PTRDIFF@
#undef  MMUX_BASH_TYPE_MAX_MODE
#define MMUX_BASH_TYPE_MAX_MODE			@MMUX_BASH_TYPE_MAX_MODE@
#undef  MMUX_BASH_TYPE_MAX_OFF
#define MMUX_BASH_TYPE_MAX_OFF			@MMUX_BASH_TYPE_MAX_OFF@
#undef  MMUX_BASH_TYPE_MAX_PID
#define MMUX_BASH_TYPE_MAX_PID			@MMUX_BASH_TYPE_MAX_PID@
#undef  MMUX_BASH_TYPE_MAX_UID
#define MMUX_BASH_TYPE_MAX_UID			@MMUX_BASH_TYPE_MAX_UID@
#undef  MMUX_BASH_TYPE_MAX_GID
#define MMUX_BASH_TYPE_MAX_GID			@MMUX_BASH_TYPE_MAX_GID@
#undef  MMUX_BASH_TYPE_MAX_WCHAR
#define MMUX_BASH_TYPE_MAX_WCHAR			@MMUX_BASH_TYPE_MAX_WCHAR@
#undef  MMUX_BASH_TYPE_MAX_WINT
#define MMUX_BASH_TYPE_MAX_WINT			@MMUX_BASH_TYPE_MAX_WINT@
*/


/** --------------------------------------------------------------------
 ** Constants and preprocessor macros: type maximum values.
 ** ----------------------------------------------------------------- */

/*
#undef  MMUX_LIBC_MIN_POINTER
#define MMUX_BASH_TYPE_MIN_POINTER			@MMUX_BASH_TYPE_MIN_UINTPTR@
#undef  MMUX_BASH_TYPE_MIN_SCHAR
#define MMUX_BASH_TYPE_MIN_SCHAR			@MMUX_BASH_TYPE_MIN_SCHAR@
#undef  MMUX_BASH_TYPE_MIN_UCHAR
#define MMUX_BASH_TYPE_MIN_UCHAR			@MMUX_BASH_TYPE_MIN_UCHAR@
#undef  MMUX_BASH_TYPE_MIN_SSHORT
#define MMUX_BASH_TYPE_MIN_SSHORT			@MMUX_BASH_TYPE_MIN_SSHORT@
#undef  MMUX_BASH_TYPE_MIN_USHORT
#define MMUX_BASH_TYPE_MIN_USHORT			@MMUX_BASH_TYPE_MIN_USHORT@
#undef  MMUX_BASH_TYPE_MIN_SINT
#define MMUX_BASH_TYPE_MIN_SINT			@MMUX_BASH_TYPE_MIN_SINT@
#undef  MMUX_BASH_TYPE_MIN_UINT
#define MMUX_BASH_TYPE_MIN_UINT			@MMUX_BASH_TYPE_MIN_UINT@
#undef  MMUX_BASH_TYPE_MIN_SLONG
#define MMUX_BASH_TYPE_MIN_SLONG			@MMUX_BASH_TYPE_MIN_SLONG@
#undef  MMUX_BASH_TYPE_MIN_ULONG
#define MMUX_BASH_TYPE_MIN_ULONG			@MMUX_BASH_TYPE_MIN_ULONG@

#if ((defined HAVE_LONG_LONG_INT) && (1 == HAVE_LONG_LONG_INT))
#undef  MMUX_BASH_TYPE_MIN_SLLONG
#define MMUX_BASH_TYPE_MIN_SLLONG			@MMUX_BASH_TYPE_MIN_SLLONG@
#endif
#if ((defined HAVE_UNSIGNED_LONG_LONG_INT) && (1 == HAVE_UNSIGNED_LONG_LONG_INT))
#undef  MMUX_BASH_TYPE_MIN_ULLONG
#define MMUX_BASH_TYPE_MIN_ULLONG			@MMUX_BASH_TYPE_MIN_ULLONG@
#endif

#undef  MMUX_BASH_TYPE_MIN_SSIZE
#define MMUX_BASH_TYPE_MIN_SSIZE			@MMUX_BASH_TYPE_MIN_SSIZE@
#undef  MMUX_BASH_TYPE_MIN_USIZE
#define MMUX_BASH_TYPE_MIN_USIZE			@MMUX_BASH_TYPE_MIN_USIZE@
#undef  MMUX_BASH_TYPE_MIN_SINTMAX
#define MMUX_BASH_TYPE_MIN_SINTMAX			@MMUX_BASH_TYPE_MIN_SINTMAX@
#undef  MMUX_BASH_TYPE_MIN_UINTMAX
#define MMUX_BASH_TYPE_MIN_UINTMAX			@MMUX_BASH_TYPE_MIN_UINTMAX@
#undef  MMUX_BASH_TYPE_MIN_SINTPTR
#define MMUX_BASH_TYPE_MIN_SINTPTR			@MMUX_BASH_TYPE_MIN_SINTPTR@
#undef  MMUX_BASH_TYPE_MIN_UINTPTR
#define MMUX_BASH_TYPE_MIN_UINTPTR			@MMUX_BASH_TYPE_MIN_UINTPTR@

#undef  MMUX_BASH_TYPE_MIN_PTRDIFF
#define MMUX_BASH_TYPE_MIN_PTRDIFF			@MMUX_BASH_TYPE_MIN_PTRDIFF@
#undef  MMUX_BASH_TYPE_MIN_MODE
#define MMUX_BASH_TYPE_MIN_MODE			@MMUX_BASH_TYPE_MIN_MODE@
#undef  MMUX_BASH_TYPE_MIN_OFF
#define MMUX_BASH_TYPE_MIN_OFF			@MMUX_BASH_TYPE_MIN_OFF@
#undef  MMUX_BASH_TYPE_MIN_PID
#define MMUX_BASH_TYPE_MIN_PID			@MMUX_BASH_TYPE_MIN_PID@
#undef  MMUX_BASH_TYPE_MIN_UID
#define MMUX_BASH_TYPE_MIN_UID			@MMUX_BASH_TYPE_MIN_UID@
#undef  MMUX_BASH_TYPE_MIN_GID
#define MMUX_BASH_TYPE_MIN_GID			@MMUX_BASH_TYPE_MIN_GID@
#undef  MMUX_BASH_TYPE_MIN_WCHAR
#define MMUX_BASH_TYPE_MIN_WCHAR			@MMUX_BASH_TYPE_MIN_WCHAR@
#undef  MMUX_BASH_TYPE_MIN_WINT
#define MMUX_BASH_TYPE_MIN_WINT			@MMUX_BASH_TYPE_MIN_WINT@
*/


/** --------------------------------------------------------------------
 ** Version functions.
 ** ----------------------------------------------------------------- */

mmux_bash_pointers_decl char const *	mmux_bash_pointers_version_string		(void);
mmux_bash_pointers_decl int		mmux_bash_pointers_version_interface_current	(void);
mmux_bash_pointers_decl int		mmux_bash_pointers_version_interface_revision	(void);
mmux_bash_pointers_decl int		mmux_bash_pointers_version_interface_age	(void);


/** --------------------------------------------------------------------
 ** Type definitions.
 ** ----------------------------------------------------------------- */

/* These definitions can be useful when expanding macros. */
typedef void *				mmux_libc_pointer_t;
typedef signed char			mmux_libc_schar_t;
typedef unsigned char			mmux_libc_uchar_t;
typedef signed short int		mmux_libc_sshort_t;
typedef unsigned short int		mmux_libc_ushort_t;
typedef signed int			mmux_libc_sint_t;
typedef unsigned int			mmux_libc_uint_t;
typedef signed long			mmux_libc_slong_t;
typedef unsigned long			mmux_libc_ulong_t;

#if ((defined HAVE_LONG_LONG_INT) && (1 == HAVE_LONG_LONG_INT))
typedef signed long long		mmux_libc_sllong_t;
#endif
#if ((defined HAVE_UNSIGNED_LONG_LONG_INT) && (1 == HAVE_UNSIGNED_LONG_LONG_INT))
typedef unsigned long long int		mmux_libc_ullong_t;
#endif

typedef int8_t				mmux_libc_sint8_t;
typedef uint8_t				mmux_libc_uint8_t;
typedef int16_t				mmux_libc_sint16_t;
typedef uint16_t			mmux_libc_uint16_t;
typedef int32_t				mmux_libc_sint32_t;
typedef uint32_t			mmux_libc_uint32_t;
typedef int64_t				mmux_libc_sint64_t;
typedef uint64_t			mmux_libc_uint64_t;

typedef float				mmux_libc_float_t;
typedef double				mmux_libc_double_t;
#if ((defined HAVE_LONG_DOUBLE) && (1 == HAVE_LONG_DOUBLE))
typedef long double			mmux_libc_ldouble_t;
#endif
typedef double complex			mmux_libc_complex_t;

typedef @MMUX_BASH_TYPE_ALIAS_SSIZE@		mmux_libc_ssize_t;
typedef @MMUX_BASH_TYPE_ALIAS_USIZE@		mmux_libc_usize_t;
typedef @MMUX_BASH_TYPE_ALIAS_SINTMAX@	mmux_libc_sintmax_t;
typedef @MMUX_BASH_TYPE_ALIAS_UINTMAX@	mmux_libc_uintmax_t;
typedef @MMUX_BASH_TYPE_ALIAS_SINTPTR@	mmux_libc_sintptr_t;
typedef @MMUX_BASH_TYPE_ALIAS_UINTPTR@	mmux_libc_uintptr_t;

typedef @MMUX_BASH_TYPE_ALIAS_PTRDIFF@	mmux_libc_ptrdiff_t;
typedef @MMUX_BASH_TYPE_ALIAS_MODE@		mmux_libc_mode_t;
typedef @MMUX_BASH_TYPE_ALIAS_OFF@		mmux_libc_off_t;
typedef @MMUX_BASH_TYPE_ALIAS_PID@		mmux_libc_pid_t;
typedef @MMUX_BASH_TYPE_ALIAS_UID@		mmux_libc_uid_t;
typedef @MMUX_BASH_TYPE_ALIAS_GID@		mmux_libc_gid_t;
typedef @MMUX_BASH_TYPE_ALIAS_WCHAR@		mmux_libc_wchar_t;
typedef @MMUX_BASH_TYPE_ALIAS_WINT@		mmux_libc_wint_t;


/** --------------------------------------------------------------------
 ** Type string parsers.
 ** ----------------------------------------------------------------- */

#undef  MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER
#define MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(LOWER) \
  mmux_bash_pointers_decl int mmux_bash_pointers_parse_ ## LOWER \
  (mmux_libc_ ## LOWER ## _t * p_data, char const * s_arg, char const * caller_name) \
       __attribute__((__nonnull__(1,2)))

MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(pointer);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(schar);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(uchar);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(sshort);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(ushort);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(sint);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(uint);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(slong);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(ulong);
#if ((defined HAVE_LONG_LONG_INT) && (1 == HAVE_LONG_LONG_INT))
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(sllong);
#endif
#if ((defined HAVE_UNSIGNED_LONG_LONG_INT) && (1 == HAVE_UNSIGNED_LONG_LONG_INT))
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(ullong);
#endif

MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(float);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(double);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(ldouble);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(complex);

MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(sint8);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(uint8);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(sint16);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(uint16);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(sint32);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(uint32);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(sint64);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(uint64);

MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(ssize);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(usize);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(sintmax);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(uintmax);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(sintptr);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(uintptr);

MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(ptrdiff);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(mode);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(off);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(pid);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(uid);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(gid);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(wchar);
MMUX_BASH_POINTERS_DEFINE_TYPE_PARSER(wint);


/** --------------------------------------------------------------------
 ** Type string printers.
 ** ----------------------------------------------------------------- */

#undef  MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER
#define MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(LOWER) \
  mmux_bash_pointers_decl int mmux_bash_pointers_sprint_ ## LOWER \
  (char * strptr, size_t len, mmux_libc_ ## LOWER ## _t value) \
       __attribute__((__nonnull__(1)))

MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(pointer);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(schar);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(uchar);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(sshort);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(ushort);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(sint);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(uint);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(slong);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(ulong);
#if ((defined HAVE_LONG_LONG_INT) && (1 == HAVE_LONG_LONG_INT))
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(sllong);
#endif
#if ((defined HAVE_UNSIGNED_LONG_LONG_INT) && (1 == HAVE_UNSIGNED_LONG_LONG_INT))
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(ullong);
#endif

MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(float);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(double);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(ldouble);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(complex);

MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(sint8);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(uint8);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(sint16);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(uint16);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(sint32);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(uint32);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(sint64);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(uint64);

MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(ssize);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(usize);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(sintmax);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(uintmax);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(sintptr);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(uintptr);

MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(ptrdiff);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(mode);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(off);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(pid);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(uid);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(gid);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(wchar);
MMUX_BASH_POINTERS_DEFINE_TYPE_SPRINTER(wint);


/** --------------------------------------------------------------------
 ** Type stdout printers.
 ** ----------------------------------------------------------------- */

mmux_bash_pointers_decl int mmux_bash_pointers_print_pointer (void * data);
mmux_bash_pointers_decl int mmux_bash_pointers_print_usize   (size_t data);
mmux_bash_pointers_decl int mmux_bash_pointers_print_complex (double complex data);


/** --------------------------------------------------------------------
 ** Error handling functions.
 ** ----------------------------------------------------------------- */

mmux_bash_pointers_decl int mmux_bash_pointers_set_ERRNO (int errnum);


/** --------------------------------------------------------------------
 ** Done.
 ** ----------------------------------------------------------------- */

#ifdef __cplusplus
} // extern "C"
#endif

#endif /* MMUX_BASH_POINTERS_H */

/* end of file */
